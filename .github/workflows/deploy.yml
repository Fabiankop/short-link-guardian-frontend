name: Desplegar en AWS App Runner

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Construir y desplegar
    runs-on: ubuntu-latest

    env:
      ECR_REPOSITORY: short-link-guardian-front
      AWS_REGION: us-east-1
      ECR_REGISTRY: 157422757090.dkr.ecr.us-east-1.amazonaws.com
      IMAGE_TAG: latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login en Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Construir y publicar imagen Docker
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Desplegar en App Runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: short-link-guardian-frontend
          image: ${{ steps.build-image.outputs.image }}
          access-role-arn: ${{ secrets.APPRUNNER_SERVICE_ROLE_ARN }}
          region: ${{ env.AWS_REGION }}
          cpu: 1
          memory: 2
          port: 8080
          wait-for-service-stability: true
          runtime-environment-variables: |
            VITE_API_URL=https://98ec-34-238-108-151.ngrok-free.app

      - name: Resultado del despliegue
        run: echo "Aplicación desplegada en ${{ steps.deploy-apprunner.outputs.service-url }}"
